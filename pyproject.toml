[project]
name = "agentcortex"
version = "0.1.0"
description = "Comprehensive RAG (Retrieval-Augmented Generation) pipeline with PDF processing, vector storage, and LLM integration"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9"
authors = [
    { name = "AgentCortex", email = "hello@agentcortex.com" }
]
keywords = ["rag", "retrieval", "augmentation", "llm", "pdf", "vector", "faiss", "langchain"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-openai>=0.0.5",
    "langchain-huggingface>=0.0.1",
    "faiss-cpu>=1.7.4",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "sentence-transformers>=2.2.2",
    "huggingface-hub>=0.19.0",
    "datasets>=2.14.0",
    "evaluate>=0.4.0",
    "bitsandbytes>=0.41.0",
    "accelerate>=0.24.0",
    "pdfplumber>=0.9.0",
    "PyPDF2>=3.0.0",
    "tiktoken>=0.5.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.65.0",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "langdetect>=1.0.9",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/AgentCortex/agentcortex"
Repository = "https://github.com/AgentCortex/agentcortex"
Issues = "https://github.com/AgentCortex/agentcortex/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agentcortex"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
